# CircleCI configuration file
version: 2.1
orbs:
  codecov: codecov/codecov@3.2.4

executors:
  node-executor:
    docker:
      - image: cimg/node:16.18
    working_directory: ~/workspace

jobs:
  setup:
    executor: node-executor
    steps:
      - checkout

      - restore_cache:
          name: Restoring Yarn package cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Installing dependencies
          command: yarn install --immutable

      - save_cache:
          name: Saving Yarn package cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged

      - persist_to_workspace:
          root: .
          paths:
            - ./*

  test:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/workspace

      - run:
          name: Unit testing
          command: yarn test:coverage --silent

      - codecov/upload:
          file: ./coverage/lcov.info

  build:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/workspace
      - run:
          name: Building project
          command: yarn build

      - run:
          name: Packing the module
          command: |
            yarn pack
            mkdir -p ~/workspace/artifacts
            cp -r *.tgz ~/workspace/artifacts

      - persist_to_workspace:
          root: ~/workspace
          paths:
            - ./artifacts/*

  publish:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/workspace

      - run:
          name: Generating .npmrc
          command: |
            cd ~/workspace/artifacts

            # Unzipping the tarball
            tar zxvf *.tgz
            cd ./package
            ls -la

            # Generating .npmrc
            echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc

      - run:
          name: Publishing package
          command: |
            cd ~/workspace/artifacts/package
            [[ $CIRCLE_BRANCH == "release" ]] && 
              TAG=latest ||
              TAG=next
            echo "Publishing with '${TAG}' tag"
            yarn publish --non-interactive --tag=$TAG --access=public

workflows:
  build-and-publish:
    jobs:
      - setup

      - test:
          requires:
            - setup

      - build:
          requires:
            - test

      - hold:
          type: approval
          requires:
            - build

      - publish:
          requires:
            - hold
